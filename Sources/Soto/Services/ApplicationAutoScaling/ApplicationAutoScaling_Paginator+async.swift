//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2021 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto/tree/main/CodeGenerator. DO NOT EDIT.

#if compiler(>=5.5)

import SotoCore

// MARK: Paginators

@available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
extension ApplicationAutoScaling {
    ///  Gets information about the scalable targets in the specified namespace. You can filter the results using ResourceIds and ScalableDimension.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func describeScalableTargetsPaginator(
        _ input: DescribeScalableTargetsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<DescribeScalableTargetsRequest, DescribeScalableTargetsResponse> {
        return .init(
            input: input,
            command: describeScalableTargets,
            inputKey: \DescribeScalableTargetsRequest.nextToken,
            outputKey: \DescribeScalableTargetsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Provides descriptive information about the scaling activities in the specified namespace from the previous six weeks. You can filter the results using ResourceId and ScalableDimension.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func describeScalingActivitiesPaginator(
        _ input: DescribeScalingActivitiesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<DescribeScalingActivitiesRequest, DescribeScalingActivitiesResponse> {
        return .init(
            input: input,
            command: describeScalingActivities,
            inputKey: \DescribeScalingActivitiesRequest.nextToken,
            outputKey: \DescribeScalingActivitiesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Describes the Application Auto Scaling scaling policies for the specified service namespace. You can filter the results using ResourceId, ScalableDimension, and PolicyNames. For more information, see Target tracking scaling policies and Step scaling policies in the Application Auto Scaling User Guide.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func describeScalingPoliciesPaginator(
        _ input: DescribeScalingPoliciesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<DescribeScalingPoliciesRequest, DescribeScalingPoliciesResponse> {
        return .init(
            input: input,
            command: describeScalingPolicies,
            inputKey: \DescribeScalingPoliciesRequest.nextToken,
            outputKey: \DescribeScalingPoliciesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Describes the Application Auto Scaling scheduled actions for the specified service namespace. You can filter the results using the ResourceId, ScalableDimension, and ScheduledActionNames parameters. For more information, see Scheduled scaling and Managing scheduled scaling in the Application Auto Scaling User Guide.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func describeScheduledActionsPaginator(
        _ input: DescribeScheduledActionsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<DescribeScheduledActionsRequest, DescribeScheduledActionsResponse> {
        return .init(
            input: input,
            command: describeScheduledActions,
            inputKey: \DescribeScheduledActionsRequest.nextToken,
            outputKey: \DescribeScheduledActionsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }
}

#endif // compiler(>=5.5)
