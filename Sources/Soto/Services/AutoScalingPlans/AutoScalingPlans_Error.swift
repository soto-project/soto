//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2021 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto-codegenerator.
// DO NOT EDIT.

import SotoCore

/// Error enum for AutoScalingPlans
public struct AutoScalingPlansErrorType: AWSErrorType {
    enum Code: String {
        case concurrentUpdateException = "ConcurrentUpdateException"
        case internalServiceException = "InternalServiceException"
        case invalidNextTokenException = "InvalidNextTokenException"
        case limitExceededException = "LimitExceededException"
        case objectNotFoundException = "ObjectNotFoundException"
        case validationException = "ValidationException"
    }

    private let error: Code
    public let context: AWSErrorContext?

    /// initialize AutoScalingPlans
    public init?(errorCode: String, context: AWSErrorContext) {
        guard let error = Code(rawValue: errorCode) else { return nil }
        self.error = error
        self.context = context
    }

    internal init(_ error: Code) {
        self.error = error
        self.context = nil
    }

    /// return error code string
    public var errorCode: String { self.error.rawValue }

    /// Concurrent updates caused an exception, for example, if you request an update to a scaling plan that already has a pending update.
    public static var concurrentUpdateException: Self { .init(.concurrentUpdateException) }
    /// The service encountered an internal error.
    public static var internalServiceException: Self { .init(.internalServiceException) }
    /// The token provided is not valid.
    public static var invalidNextTokenException: Self { .init(.invalidNextTokenException) }
    /// Your account exceeded a limit. This exception is thrown when a per-account resource limit is exceeded.
    public static var limitExceededException: Self { .init(.limitExceededException) }
    /// The specified object could not be found.
    public static var objectNotFoundException: Self { .init(.objectNotFoundException) }
    /// An exception was thrown for a validation issue. Review the parameters provided.
    public static var validationException: Self { .init(.validationException) }
}

extension AutoScalingPlansErrorType: Equatable {
    public static func == (lhs: AutoScalingPlansErrorType, rhs: AutoScalingPlansErrorType) -> Bool {
        lhs.error == rhs.error
    }
}

extension AutoScalingPlansErrorType: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(self.message ?? "")"
    }
}
