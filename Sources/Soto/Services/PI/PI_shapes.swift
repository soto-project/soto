//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2023 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto-codegenerator.
// DO NOT EDIT.

#if os(Linux) && compiler(<5.10)
// swift-corelibs-foundation hasn't been updated with Sendable conformances
@preconcurrency import Foundation
#else
import Foundation
#endif
@_spi(SotoInternal) import SotoCore

extension PI {
    // MARK: Enums

    public enum AcceptLanguage: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case enUs = "EN_US"
        public var description: String { return self.rawValue }
    }

    public enum AnalysisStatus: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case failed = "FAILED"
        case running = "RUNNING"
        case succeeded = "SUCCEEDED"
        public var description: String { return self.rawValue }
    }

    public enum ContextType: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case causal = "CAUSAL"
        case contextual = "CONTEXTUAL"
        public var description: String { return self.rawValue }
    }

    public enum DetailStatus: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case available = "AVAILABLE"
        case processing = "PROCESSING"
        case unavailable = "UNAVAILABLE"
        public var description: String { return self.rawValue }
    }

    public enum FeatureStatus: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case disabled = "DISABLED"
        case disabledPendingReboot = "DISABLED_PENDING_REBOOT"
        case enabled = "ENABLED"
        case enabledPendingReboot = "ENABLED_PENDING_REBOOT"
        case unknown = "UNKNOWN"
        case unsupported = "UNSUPPORTED"
        public var description: String { return self.rawValue }
    }

    public enum PeriodAlignment: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case endTime = "END_TIME"
        case startTime = "START_TIME"
        public var description: String { return self.rawValue }
    }

    public enum ServiceType: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case docdb = "DOCDB"
        case rds = "RDS"
        public var description: String { return self.rawValue }
    }

    public enum Severity: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case high = "HIGH"
        case low = "LOW"
        case medium = "MEDIUM"
        public var description: String { return self.rawValue }
    }

    public enum TextFormat: String, CustomStringConvertible, Codable, Sendable, CodingKeyRepresentable {
        case markdown = "MARKDOWN"
        case plainText = "PLAIN_TEXT"
        public var description: String { return self.rawValue }
    }

    // MARK: Shapes

    public struct AnalysisReport: AWSDecodableShape {
        /// The name of the analysis report.
        public let analysisReportId: String
        /// The time you created the analysis report.
        public let createTime: Date?
        /// The analysis end time in the report.
        public let endTime: Date?
        /// The unique identifier of the analysis report.
        public let identifier: String?
        /// The list of identified insights in the analysis report.
        public let insights: [Insight]?
        /// List the tags for the Amazon Web Services service for which Performance Insights returns metrics. Valid values are as follows:    RDS     DOCDB
        public let serviceType: ServiceType?
        /// The analysis start time in the report.
        public let startTime: Date?
        /// The status of the created analysis report.
        public let status: AnalysisStatus?

        public init(analysisReportId: String, createTime: Date? = nil, endTime: Date? = nil, identifier: String? = nil, insights: [Insight]? = nil, serviceType: ServiceType? = nil, startTime: Date? = nil, status: AnalysisStatus? = nil) {
            self.analysisReportId = analysisReportId
            self.createTime = createTime
            self.endTime = endTime
            self.identifier = identifier
            self.insights = insights
            self.serviceType = serviceType
            self.startTime = startTime
            self.status = status
        }

        private enum CodingKeys: String, CodingKey {
            case analysisReportId = "AnalysisReportId"
            case createTime = "CreateTime"
            case endTime = "EndTime"
            case identifier = "Identifier"
            case insights = "Insights"
            case serviceType = "ServiceType"
            case startTime = "StartTime"
            case status = "Status"
        }
    }

    public struct AnalysisReportSummary: AWSDecodableShape {
        /// The name of the analysis report.
        public let analysisReportId: String?
        /// The time you created the analysis report.
        public let createTime: Date?
        /// The end time of the analysis in the report.
        public let endTime: Date?
        /// The start time of the analysis in the report.
        public let startTime: Date?
        /// The status of the analysis report.
        public let status: AnalysisStatus?
        /// List of all the tags added to the analysis report.
        public let tags: [Tag]?

        public init(analysisReportId: String? = nil, createTime: Date? = nil, endTime: Date? = nil, startTime: Date? = nil, status: AnalysisStatus? = nil, tags: [Tag]? = nil) {
            self.analysisReportId = analysisReportId
            self.createTime = createTime
            self.endTime = endTime
            self.startTime = startTime
            self.status = status
            self.tags = tags
        }

        private enum CodingKeys: String, CodingKey {
            case analysisReportId = "AnalysisReportId"
            case createTime = "CreateTime"
            case endTime = "EndTime"
            case startTime = "StartTime"
            case status = "Status"
            case tags = "Tags"
        }
    }

    public struct CreatePerformanceAnalysisReportRequest: AWSEncodableShape {
        /// The end time defined for the analysis report.
        public let endTime: Date
        /// An immutable, Amazon Web Services Region-unique identifier for a data source. Performance Insights gathers metrics from this data source. To use an Amazon RDS instance as a data source, you specify its DbiResourceId value.  For example, specify db-ADECBTYHKTSAUMUZQYPDS2GW4A.
        public let identifier: String
        /// The Amazon Web Services service for which Performance Insights will return metrics. Valid value is RDS.
        public let serviceType: ServiceType
        /// The start time defined for the analysis report.
        public let startTime: Date
        /// The metadata assigned to the analysis report consisting of a key-value pair.
        public let tags: [Tag]?

        public init(endTime: Date, identifier: String, serviceType: ServiceType, startTime: Date, tags: [Tag]? = nil) {
            self.endTime = endTime
            self.identifier = identifier
            self.serviceType = serviceType
            self.startTime = startTime
            self.tags = tags
        }

        public func validate(name: String) throws {
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
            try self.tags?.forEach {
                try $0.validate(name: "\(name).tags[]")
            }
            try self.validate(self.tags, name: "tags", parent: name, max: 200)
        }

        private enum CodingKeys: String, CodingKey {
            case endTime = "EndTime"
            case identifier = "Identifier"
            case serviceType = "ServiceType"
            case startTime = "StartTime"
            case tags = "Tags"
        }
    }

    public struct CreatePerformanceAnalysisReportResponse: AWSDecodableShape {
        /// A unique identifier for the created analysis report.
        public let analysisReportId: String?

        public init(analysisReportId: String? = nil) {
            self.analysisReportId = analysisReportId
        }

        private enum CodingKeys: String, CodingKey {
            case analysisReportId = "AnalysisReportId"
        }
    }

    public struct Data: AWSDecodableShape {
        /// This field determines the Performance Insights metric to render  for the insight. The name field refers to a Performance Insights metric.
        public let performanceInsightsMetric: PerformanceInsightsMetric?

        public init(performanceInsightsMetric: PerformanceInsightsMetric? = nil) {
            self.performanceInsightsMetric = performanceInsightsMetric
        }

        private enum CodingKeys: String, CodingKey {
            case performanceInsightsMetric = "PerformanceInsightsMetric"
        }
    }

    public struct DataPoint: AWSDecodableShape {
        /// The time, in epoch format, associated with a particular Value.
        public let timestamp: Date
        /// The actual value associated with a particular Timestamp.
        public let value: Double

        public init(timestamp: Date, value: Double) {
            self.timestamp = timestamp
            self.value = value
        }

        private enum CodingKeys: String, CodingKey {
            case timestamp = "Timestamp"
            case value = "Value"
        }
    }

    public struct DeletePerformanceAnalysisReportRequest: AWSEncodableShape {
        /// The unique identifier of the analysis report for deletion.
        public let analysisReportId: String
        /// An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers metrics from this data source.  In the console, the identifier is shown as ResourceID. When you  call DescribeDBInstances, the identifier is returned as DbiResourceId. To use a DB instance as a data source, specify its DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VW2X.
        public let identifier: String
        /// The Amazon Web Services service for which Performance Insights will return metrics. Valid value is RDS.
        public let serviceType: ServiceType

        public init(analysisReportId: String, identifier: String, serviceType: ServiceType) {
            self.analysisReportId = analysisReportId
            self.identifier = identifier
            self.serviceType = serviceType
        }

        public func validate(name: String) throws {
            try self.validate(self.analysisReportId, name: "analysisReportId", parent: name, max: 100)
            try self.validate(self.analysisReportId, name: "analysisReportId", parent: name, min: 1)
            try self.validate(self.analysisReportId, name: "analysisReportId", parent: name, pattern: "^report-[0-9a-f]{17}$")
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
        }

        private enum CodingKeys: String, CodingKey {
            case analysisReportId = "AnalysisReportId"
            case identifier = "Identifier"
            case serviceType = "ServiceType"
        }
    }

    public struct DeletePerformanceAnalysisReportResponse: AWSDecodableShape {
        public init() {}
    }

    public struct DescribeDimensionKeysRequest: AWSEncodableShape {
        /// Additional metrics for the top N dimension keys. If the specified dimension group in the GroupBy parameter is db.sql_tokenized, you can specify per-SQL metrics to get the values for the top N SQL digests. The response syntax is as follows: "AdditionalMetrics" : { "string" : "string" }.
        public let additionalMetrics: [String]?
        /// The date and time specifying the end of the requested time series data. The value specified is exclusive, which means that data points less than (but not equal to) EndTime are returned. The value for EndTime must be later than the value for StartTime.
        public let endTime: Date
        /// One or more filters to apply in the request. Restrictions:   Any number of filters by the same dimension, as specified in the GroupBy or Partition parameters.   A single filter for any other dimension in this dimension group.
        public let filter: [String: String]?
        /// A specification for how to aggregate the data points from a query result. You must specify a valid dimension group. Performance Insights returns all dimensions within this group, unless you provide the names of specific dimensions within this group. You can also request that Performance Insights return a limited number of values for a dimension.
        public let groupBy: DimensionGroup
        /// An immutable, Amazon Web Services Region-unique identifier for a data source. Performance Insights gathers metrics from this data source. To use an Amazon RDS instance as a data source, you specify its DbiResourceId value.  For example, specify db-FAIHNTYBKTGAUSUZQYPDS2GW4A.
        public let identifier: String
        /// The maximum number of items to return in the response. If more items exist than the specified MaxRecords value, a pagination token is included in the response so that the remaining results can be retrieved.
        public let maxResults: Int?
        /// The name of a Performance Insights metric to be measured. Valid values for Metric are:    db.load.avg - A scaled representation of the number of active sessions for the database engine.     db.sampledload.avg - The raw number of active sessions for the database engine.    If the number of active sessions is less than an internal Performance Insights threshold, db.load.avg  and db.sampledload.avg are the same value. If the number of active sessions is greater than  the internal threshold, Performance Insights samples the active sessions, with db.load.avg  showing the scaled values, db.sampledload.avg showing the raw values, and  db.sampledload.avg less than db.load.avg. For most use cases, you can  query db.load.avg only.
        public let metric: String
        /// An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by MaxRecords.
        public let nextToken: String?
        /// For each dimension specified in GroupBy, specify a secondary dimension  to further subdivide the partition keys in the response.
        public let partitionBy: DimensionGroup?
        /// The granularity, in seconds, of the data points returned from Performance Insights. A period can be as short as  one second, or as long as one day (86400 seconds). Valid values are:     1 (one second)    60 (one minute)    300 (five minutes)    3600 (one hour)    86400 (twenty-four hours)   If you don't specify PeriodInSeconds, then Performance Insights chooses a value for you, with a  goal of returning roughly 100-200 data points in the response.
        public let periodInSeconds: Int?
        /// The Amazon Web Services service for which Performance Insights will return metrics. Valid values are as follows:    RDS     DOCDB
        public let serviceType: ServiceType
        /// The date and time specifying the beginning of the requested time series data. You must specify a StartTime within the past 7 days. The value specified is inclusive,  which means that data points equal to or greater than StartTime are returned.  The value for StartTime must be earlier than the value for EndTime.
        public let startTime: Date

        public init(additionalMetrics: [String]? = nil, endTime: Date, filter: [String: String]? = nil, groupBy: DimensionGroup, identifier: String, maxResults: Int? = nil, metric: String, nextToken: String? = nil, partitionBy: DimensionGroup? = nil, periodInSeconds: Int? = nil, serviceType: ServiceType, startTime: Date) {
            self.additionalMetrics = additionalMetrics
            self.endTime = endTime
            self.filter = filter
            self.groupBy = groupBy
            self.identifier = identifier
            self.maxResults = maxResults
            self.metric = metric
            self.nextToken = nextToken
            self.partitionBy = partitionBy
            self.periodInSeconds = periodInSeconds
            self.serviceType = serviceType
            self.startTime = startTime
        }

        public func validate(name: String) throws {
            try self.additionalMetrics?.forEach {
                try validate($0, name: "additionalMetrics[]", parent: name, max: 256)
                try validate($0, name: "additionalMetrics[]", parent: name, pattern: "\\S")
            }
            try self.validate(self.additionalMetrics, name: "additionalMetrics", parent: name, max: 30)
            try self.validate(self.additionalMetrics, name: "additionalMetrics", parent: name, min: 1)
            try self.filter?.forEach {
                try validate($0.key, name: "filter.key", parent: name, max: 256)
                try validate($0.key, name: "filter.key", parent: name, pattern: "\\S")
                try validate($0.value, name: "filter[\"\($0.key)\"]", parent: name, max: 256)
                try validate($0.value, name: "filter[\"\($0.key)\"]", parent: name, pattern: "\\S")
            }
            try self.groupBy.validate(name: "\(name).groupBy")
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
            try self.validate(self.maxResults, name: "maxResults", parent: name, max: 25)
            try self.validate(self.maxResults, name: "maxResults", parent: name, min: 0)
            try self.validate(self.metric, name: "metric", parent: name, max: 256)
            try self.validate(self.metric, name: "metric", parent: name, pattern: "\\S")
            try self.validate(self.nextToken, name: "nextToken", parent: name, max: 8192)
            try self.validate(self.nextToken, name: "nextToken", parent: name, min: 1)
            try self.validate(self.nextToken, name: "nextToken", parent: name, pattern: "^[a-zA-Z0-9_=-]+$")
            try self.partitionBy?.validate(name: "\(name).partitionBy")
        }

        private enum CodingKeys: String, CodingKey {
            case additionalMetrics = "AdditionalMetrics"
            case endTime = "EndTime"
            case filter = "Filter"
            case groupBy = "GroupBy"
            case identifier = "Identifier"
            case maxResults = "MaxResults"
            case metric = "Metric"
            case nextToken = "NextToken"
            case partitionBy = "PartitionBy"
            case periodInSeconds = "PeriodInSeconds"
            case serviceType = "ServiceType"
            case startTime = "StartTime"
        }
    }

    public struct DescribeDimensionKeysResponse: AWSDecodableShape {
        /// The end time for the returned dimension keys, after alignment to a granular boundary (as specified by PeriodInSeconds). AlignedEndTime will be greater than or equal to the value of the user-specified Endtime.
        public let alignedEndTime: Date?
        /// The start time for the returned dimension keys, after alignment to a granular boundary (as specified by PeriodInSeconds). AlignedStartTime will be less than or equal to the value of the user-specified StartTime.
        public let alignedStartTime: Date?
        /// The dimension keys that were requested.
        public let keys: [DimensionKeyDescription]?
        /// A pagination token that indicates the response didn’t return all available records because MaxRecords was specified in the previous request. To get the remaining records, specify NextToken in a separate request with this value.
        public let nextToken: String?
        /// If PartitionBy was present in the request, PartitionKeys contains the breakdown of dimension keys by the specified partitions.
        public let partitionKeys: [ResponsePartitionKey]?

        public init(alignedEndTime: Date? = nil, alignedStartTime: Date? = nil, keys: [DimensionKeyDescription]? = nil, nextToken: String? = nil, partitionKeys: [ResponsePartitionKey]? = nil) {
            self.alignedEndTime = alignedEndTime
            self.alignedStartTime = alignedStartTime
            self.keys = keys
            self.nextToken = nextToken
            self.partitionKeys = partitionKeys
        }

        private enum CodingKeys: String, CodingKey {
            case alignedEndTime = "AlignedEndTime"
            case alignedStartTime = "AlignedStartTime"
            case keys = "Keys"
            case nextToken = "NextToken"
            case partitionKeys = "PartitionKeys"
        }
    }

    public struct DimensionDetail: AWSDecodableShape {
        /// The identifier of a dimension.
        public let identifier: String?

        public init(identifier: String? = nil) {
            self.identifier = identifier
        }

        private enum CodingKeys: String, CodingKey {
            case identifier = "Identifier"
        }
    }

    public struct DimensionGroup: AWSEncodableShape {
        /// A list of specific dimensions from a dimension group. If this parameter is not present, then it signifies that all of the dimensions in the group were requested, or are present in the response. Valid values for elements in the Dimensions array are:    db.application.name - The name of the application that is connected to the database. Valid values are as follows:    Aurora PostgreSQL   Amazon RDS PostgreSQL   Amazon DocumentDB      db.host.id - The host ID of the connected client (all engines).    db.host.name - The host name of the connected client (all engines).    db.name - The name of the database to which the client is connected. Valid values are as follows:   Aurora PostgreSQL   Amazon RDS PostgreSQL   Aurora MySQL   Amazon RDS MySQL   Amazon RDS MariaDB   Amazon DocumentDB      db.query.id - The query ID generated by Performance Insights (only Amazon DocumentDB).    db.query.db_id - The query ID generated by the database (only Amazon DocumentDB).    db.query.statement - The text of the query that is being run (only Amazon DocumentDB).    db.query.tokenized_id     db.query.tokenized.id - The query digest ID generated by Performance Insights (only Amazon DocumentDB).    db.query.tokenized.db_id - The query digest ID generated by Performance Insights (only Amazon DocumentDB).    db.query.tokenized.statement - The text of the query digest (only Amazon DocumentDB).    db.session_type.name - The type of the current session (only Amazon DocumentDB).    db.sql.id - The hash of the full, non-tokenized SQL statement generated by Performance Insights (all engines except Amazon DocumentDB).    db.sql.db_id - Either the SQL ID generated by the database engine, or a value generated by Performance Insights that begins with pi- (all engines except Amazon DocumentDB).    db.sql.statement - The full text of the SQL statement that is running, as in SELECT * FROM employees (all engines except Amazon DocumentDB)    db.sql.tokenized_id     db.sql_tokenized.id - The hash of the SQL digest generated by Performance Insights (all engines except Amazon DocumentDB). In the console, db.sql_tokenized.id is called the Support ID because Amazon Web Services Support can look at this data to help you troubleshoot database issues.    db.sql_tokenized.db_id - Either the native database ID used to refer to the SQL statement, or a synthetic ID such as pi-2372568224 that Performance Insights generates if the native database ID isn't available (all engines except Amazon DocumentDB).    db.sql_tokenized.statement - The text of the SQL digest, as in SELECT * FROM employees WHERE employee_id = ? (all engines except Amazon DocumentDB)    db.user.id - The ID of the user logged in to the database (all engines except Amazon DocumentDB).    db.user.name - The name of the user logged in to the database (all engines except Amazon DocumentDB).    db.wait_event.name - The event for which the backend is waiting (all engines except Amazon DocumentDB).    db.wait_event.type - The type of event for which the backend is waiting (all engines except Amazon DocumentDB).    db.wait_event_type.name - The name of the event type for which the backend is waiting (all engines except Amazon DocumentDB).    db.wait_state.name - The event for which the backend is waiting (only Amazon DocumentDB).
        public let dimensions: [String]?
        /// The name of the dimension group. Valid values are as follows:    db - The name of the database to which the client is connected. The following values are permitted:   Aurora PostgreSQL   Amazon RDS PostgreSQL   Aurora MySQL   Amazon RDS MySQL   Amazon RDS MariaDB   Amazon DocumentDB      db.application - The name of the application that is connected to the database. The following values are permitted:   Aurora PostgreSQL   Amazon RDS PostgreSQL   Amazon DocumentDB      db.host - The host name of the connected client (all engines).    db.query - The query that is currently running (only Amazon DocumentDB).    db.query_tokenized - The digest query (only Amazon DocumentDB).    db.session_type - The type of the current session (only Aurora PostgreSQL and RDS PostgreSQL).    db.sql - The text of the SQL statement that is currently running (all engines except Amazon DocumentDB).    db.sql_tokenized - The SQL digest (all engines except Amazon DocumentDB).    db.user - The user logged in to the database (all engines except Amazon DocumentDB).    db.wait_event - The event for which the database backend is waiting (all engines except Amazon DocumentDB).    db.wait_event_type - The type of event for which the database backend is waiting (all engines except Amazon DocumentDB).    db.wait_state - The event for which the database backend is waiting (only Amazon DocumentDB).
        public let group: String
        /// The maximum number of items to fetch for this dimension group.
        public let limit: Int?

        public init(dimensions: [String]? = nil, group: String, limit: Int? = nil) {
            self.dimensions = dimensions
            self.group = group
            self.limit = limit
        }

        public func validate(name: String) throws {
            try self.dimensions?.forEach {
                try validate($0, name: "dimensions[]", parent: name, max: 256)
                try validate($0, name: "dimensions[]", parent: name, pattern: "\\S")
            }
            try self.validate(self.dimensions, name: "dimensions", parent: name, max: 10)
            try self.validate(self.dimensions, name: "dimensions", parent: name, min: 1)
            try self.validate(self.group, name: "group", parent: name, max: 256)
            try self.validate(self.group, name: "group", parent: name, pattern: "\\S")
            try self.validate(self.limit, name: "limit", parent: name, max: 25)
            try self.validate(self.limit, name: "limit", parent: name, min: 1)
        }

        private enum CodingKeys: String, CodingKey {
            case dimensions = "Dimensions"
            case group = "Group"
            case limit = "Limit"
        }
    }

    public struct DimensionGroupDetail: AWSDecodableShape {
        /// The dimensions within a dimension group.
        public let dimensions: [DimensionDetail]?
        /// The name of the dimension group.
        public let group: String?

        public init(dimensions: [DimensionDetail]? = nil, group: String? = nil) {
            self.dimensions = dimensions
            self.group = group
        }

        private enum CodingKeys: String, CodingKey {
            case dimensions = "Dimensions"
            case group = "Group"
        }
    }

    public struct DimensionKeyDescription: AWSDecodableShape {
        /// A map that contains the value for each additional metric.
        public let additionalMetrics: [String: Double]?
        /// A map of name-value pairs for the dimensions in the group.
        public let dimensions: [String: String]?
        /// If PartitionBy was specified, PartitionKeys contains the dimensions that were.
        public let partitions: [Double]?
        /// The aggregated metric value for the dimensions, over the requested time range.
        public let total: Double?

        public init(additionalMetrics: [String: Double]? = nil, dimensions: [String: String]? = nil, partitions: [Double]? = nil, total: Double? = nil) {
            self.additionalMetrics = additionalMetrics
            self.dimensions = dimensions
            self.partitions = partitions
            self.total = total
        }

        private enum CodingKeys: String, CodingKey {
            case additionalMetrics = "AdditionalMetrics"
            case dimensions = "Dimensions"
            case partitions = "Partitions"
            case total = "Total"
        }
    }

    public struct DimensionKeyDetail: AWSDecodableShape {
        /// The full name of the dimension. The full name includes the group name and key name. The following values are valid:    db.query.statement (Amazon DocumentDB)    db.sql.statement (Amazon RDS and Aurora)
        public let dimension: String?
        /// The status of the dimension detail data. Possible values include the following:    AVAILABLE - The dimension detail data is ready to be retrieved.    PROCESSING - The dimension detail data isn't ready to be retrieved because more processing time is required. If the requested detail data has the status PROCESSING, Performance Insights returns the truncated query.    UNAVAILABLE - The dimension detail data could not be collected successfully.
        public let status: DetailStatus?
        /// The value of the dimension detail data. Depending on the return status, this value is either the  full or truncated SQL query for the following dimensions:    db.query.statement (Amazon DocumentDB)    db.sql.statement (Amazon RDS and Aurora)
        public let value: String?

        public init(dimension: String? = nil, status: DetailStatus? = nil, value: String? = nil) {
            self.dimension = dimension
            self.status = status
            self.value = value
        }

        private enum CodingKeys: String, CodingKey {
            case dimension = "Dimension"
            case status = "Status"
            case value = "Value"
        }
    }

    public struct FeatureMetadata: AWSDecodableShape {
        /// The status of the feature on the DB instance. Possible values include the following:    ENABLED - The feature is enabled on the instance.    DISABLED - The feature is disabled on the instance.    UNSUPPORTED - The feature isn't supported on the instance.    ENABLED_PENDING_REBOOT - The feature is enabled on the instance but requires a reboot to take effect.    DISABLED_PENDING_REBOOT - The feature is disabled on the instance but requires a reboot to take effect.    UNKNOWN - The feature status couldn't be determined.
        public let status: FeatureStatus?

        public init(status: FeatureStatus? = nil) {
            self.status = status
        }

        private enum CodingKeys: String, CodingKey {
            case status = "Status"
        }
    }

    public struct GetDimensionKeyDetailsRequest: AWSEncodableShape {
        /// The name of the dimension group. Performance Insights searches the specified group for the dimension group ID. The following group name values are valid:    db.query (Amazon DocumentDB only)    db.sql (Amazon RDS and Aurora only)
        public let group: String
        /// The ID of the dimension group from which to retrieve dimension details. For dimension group db.sql, the group ID is db.sql.id. The following group ID values are valid:    db.sql.id for dimension group db.sql (Aurora and RDS only)    db.query.id for dimension group db.query (DocumentDB only)
        public let groupIdentifier: String
        /// The ID for a data source from which to gather dimension data. This ID must be immutable and  unique within an Amazon Web Services Region. When a DB instance is the data source, specify its  DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VW2X.
        public let identifier: String
        /// A list of dimensions to retrieve the detail data for within the given dimension group. If you don't specify this parameter, Performance Insights returns all dimension data within the specified dimension group. Specify dimension names for the following dimension groups:    db.sql - Specify either the full dimension name db.sql.statement or the short dimension name statement (Aurora and RDS only).    db.query - Specify either the full dimension name db.query.statement or the short dimension name statement (DocumentDB only).
        public let requestedDimensions: [String]?
        /// The Amazon Web Services service for which Performance Insights returns data. The only valid value is RDS.
        public let serviceType: ServiceType

        public init(group: String, groupIdentifier: String, identifier: String, requestedDimensions: [String]? = nil, serviceType: ServiceType) {
            self.group = group
            self.groupIdentifier = groupIdentifier
            self.identifier = identifier
            self.requestedDimensions = requestedDimensions
            self.serviceType = serviceType
        }

        public func validate(name: String) throws {
            try self.validate(self.group, name: "group", parent: name, max: 256)
            try self.validate(self.group, name: "group", parent: name, pattern: "\\S")
            try self.validate(self.groupIdentifier, name: "groupIdentifier", parent: name, max: 256)
            try self.validate(self.groupIdentifier, name: "groupIdentifier", parent: name, pattern: "\\S")
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
            try self.requestedDimensions?.forEach {
                try validate($0, name: "requestedDimensions[]", parent: name, max: 256)
                try validate($0, name: "requestedDimensions[]", parent: name, pattern: "\\S")
            }
            try self.validate(self.requestedDimensions, name: "requestedDimensions", parent: name, max: 10)
            try self.validate(self.requestedDimensions, name: "requestedDimensions", parent: name, min: 1)
        }

        private enum CodingKeys: String, CodingKey {
            case group = "Group"
            case groupIdentifier = "GroupIdentifier"
            case identifier = "Identifier"
            case requestedDimensions = "RequestedDimensions"
            case serviceType = "ServiceType"
        }
    }

    public struct GetDimensionKeyDetailsResponse: AWSDecodableShape {
        /// The details for the requested dimensions.
        public let dimensions: [DimensionKeyDetail]?

        public init(dimensions: [DimensionKeyDetail]? = nil) {
            self.dimensions = dimensions
        }

        private enum CodingKeys: String, CodingKey {
            case dimensions = "Dimensions"
        }
    }

    public struct GetPerformanceAnalysisReportRequest: AWSEncodableShape {
        /// The text language in the report. The default language is EN_US (English).
        public let acceptLanguage: AcceptLanguage?
        /// A unique identifier of the created analysis report. For example, report-12345678901234567
        public let analysisReportId: String
        /// An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers  metrics from this data source. In the console, the identifier is shown as  ResourceID. When you call DescribeDBInstances, the identifier is returned as DbiResourceId. To use a DB instance as a data source, specify its DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VW2X.
        public let identifier: String
        /// The Amazon Web Services service for which Performance Insights will return metrics. Valid value is RDS.
        public let serviceType: ServiceType
        /// Indicates the text format in the report. The options are PLAIN_TEXT or MARKDOWN. The default value is plain text.
        public let textFormat: TextFormat?

        public init(acceptLanguage: AcceptLanguage? = nil, analysisReportId: String, identifier: String, serviceType: ServiceType, textFormat: TextFormat? = nil) {
            self.acceptLanguage = acceptLanguage
            self.analysisReportId = analysisReportId
            self.identifier = identifier
            self.serviceType = serviceType
            self.textFormat = textFormat
        }

        public func validate(name: String) throws {
            try self.validate(self.analysisReportId, name: "analysisReportId", parent: name, max: 100)
            try self.validate(self.analysisReportId, name: "analysisReportId", parent: name, min: 1)
            try self.validate(self.analysisReportId, name: "analysisReportId", parent: name, pattern: "^report-[0-9a-f]{17}$")
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
        }

        private enum CodingKeys: String, CodingKey {
            case acceptLanguage = "AcceptLanguage"
            case analysisReportId = "AnalysisReportId"
            case identifier = "Identifier"
            case serviceType = "ServiceType"
            case textFormat = "TextFormat"
        }
    }

    public struct GetPerformanceAnalysisReportResponse: AWSDecodableShape {
        /// The summary of the performance analysis report created for a time period.
        public let analysisReport: AnalysisReport?

        public init(analysisReport: AnalysisReport? = nil) {
            self.analysisReport = analysisReport
        }

        private enum CodingKeys: String, CodingKey {
            case analysisReport = "AnalysisReport"
        }
    }

    public struct GetResourceMetadataRequest: AWSEncodableShape {
        /// An immutable identifier for a data source that is unique for an Amazon Web Services Region.  Performance Insights gathers metrics from this data source. To use a DB instance as a data source,  specify its DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VW2X.
        public let identifier: String
        /// The Amazon Web Services service for which Performance Insights returns metrics.
        public let serviceType: ServiceType

        public init(identifier: String, serviceType: ServiceType) {
            self.identifier = identifier
            self.serviceType = serviceType
        }

        public func validate(name: String) throws {
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
        }

        private enum CodingKeys: String, CodingKey {
            case identifier = "Identifier"
            case serviceType = "ServiceType"
        }
    }

    public struct GetResourceMetadataResponse: AWSDecodableShape {
        /// The metadata for different features. For example, the metadata might indicate that a feature is turned on or off on a specific DB instance.
        public let features: [String: FeatureMetadata]?
        /// An immutable identifier for a data source that is unique for an Amazon Web Services Region.   Performance Insights gathers metrics from this data source. To use a DB instance as a data source,  specify its DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VW2X.
        public let identifier: String?

        public init(features: [String: FeatureMetadata]? = nil, identifier: String? = nil) {
            self.features = features
            self.identifier = identifier
        }

        private enum CodingKeys: String, CodingKey {
            case features = "Features"
            case identifier = "Identifier"
        }
    }

    public struct GetResourceMetricsRequest: AWSEncodableShape {
        /// The date and time specifying the end of the requested time series query range. The value  specified is exclusive. Thus, the command returns data points less than  (but not equal to) EndTime. The value for EndTime must be later than the value for StartTime.
        public let endTime: Date
        /// An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers metrics from this data source. In the console, the identifier is shown as ResourceID. When you call DescribeDBInstances, the identifier is returned as DbiResourceId. To use a DB instance as a data source, specify its DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VW2X.
        public let identifier: String
        /// The maximum number of items to return in the response. If more items exist than the specified MaxRecords value, a pagination token is included in the response so that the remaining results can be retrieved.
        public let maxResults: Int?
        /// An array of one or more queries to perform. Each query must specify a Performance Insights metric, and can optionally specify aggregation and filtering criteria.
        public let metricQueries: [MetricQuery]
        /// An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by MaxRecords.
        public let nextToken: String?
        /// The returned timestamp which is the start or end time of the time periods. The default value is END_TIME.
        public let periodAlignment: PeriodAlignment?
        /// The granularity, in seconds, of the data points returned from Performance Insights. A period can be as short as one second, or as long as one day (86400 seconds). Valid values are:    1 (one second)    60 (one minute)    300 (five minutes)    3600 (one hour)    86400 (twenty-four hours)   If you don't specify PeriodInSeconds, then Performance Insights will choose a value for you, with a goal of returning roughly 100-200 data points in the response.
        public let periodInSeconds: Int?
        /// The Amazon Web Services service for which Performance Insights returns metrics. Valid values are as follows:    RDS     DOCDB
        public let serviceType: ServiceType
        /// The date and time specifying the beginning of the requested time series query range. You can't specify a StartTime that is earlier than 7 days ago. By default, Performance Insights has 7 days of  retention, but you can extend this range up to 2 years. The value specified is inclusive. Thus, the command returns data points equal to or greater  than StartTime. The value for StartTime must be earlier than the value for EndTime.
        public let startTime: Date

        public init(endTime: Date, identifier: String, maxResults: Int? = nil, metricQueries: [MetricQuery], nextToken: String? = nil, periodAlignment: PeriodAlignment? = nil, periodInSeconds: Int? = nil, serviceType: ServiceType, startTime: Date) {
            self.endTime = endTime
            self.identifier = identifier
            self.maxResults = maxResults
            self.metricQueries = metricQueries
            self.nextToken = nextToken
            self.periodAlignment = periodAlignment
            self.periodInSeconds = periodInSeconds
            self.serviceType = serviceType
            self.startTime = startTime
        }

        public func validate(name: String) throws {
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
            try self.validate(self.maxResults, name: "maxResults", parent: name, max: 25)
            try self.validate(self.maxResults, name: "maxResults", parent: name, min: 0)
            try self.metricQueries.forEach {
                try $0.validate(name: "\(name).metricQueries[]")
            }
            try self.validate(self.metricQueries, name: "metricQueries", parent: name, max: 15)
            try self.validate(self.metricQueries, name: "metricQueries", parent: name, min: 1)
            try self.validate(self.nextToken, name: "nextToken", parent: name, max: 8192)
            try self.validate(self.nextToken, name: "nextToken", parent: name, min: 1)
            try self.validate(self.nextToken, name: "nextToken", parent: name, pattern: "^[a-zA-Z0-9_=-]+$")
        }

        private enum CodingKeys: String, CodingKey {
            case endTime = "EndTime"
            case identifier = "Identifier"
            case maxResults = "MaxResults"
            case metricQueries = "MetricQueries"
            case nextToken = "NextToken"
            case periodAlignment = "PeriodAlignment"
            case periodInSeconds = "PeriodInSeconds"
            case serviceType = "ServiceType"
            case startTime = "StartTime"
        }
    }

    public struct GetResourceMetricsResponse: AWSDecodableShape {
        /// The end time for the returned metrics, after alignment to a granular boundary (as specified by PeriodInSeconds). AlignedEndTime will be greater than or equal to the value of the user-specified Endtime.
        public let alignedEndTime: Date?
        /// The start time for the returned metrics, after alignment to a granular boundary (as specified by PeriodInSeconds). AlignedStartTime will be less than or equal to the value of the user-specified StartTime.
        public let alignedStartTime: Date?
        /// An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers metrics from this data source. In the console, the identifier is shown as ResourceID. When you call DescribeDBInstances, the identifier is returned as DbiResourceId.
        public let identifier: String?
        /// An array of metric results, where each array element contains all of the data points for a  particular dimension.
        public let metricList: [MetricKeyDataPoints]?
        /// An optional pagination token provided by a previous request. If this parameter is specified,  the response includes only records beyond the token, up to the value specified by MaxRecords.
        public let nextToken: String?

        public init(alignedEndTime: Date? = nil, alignedStartTime: Date? = nil, identifier: String? = nil, metricList: [MetricKeyDataPoints]? = nil, nextToken: String? = nil) {
            self.alignedEndTime = alignedEndTime
            self.alignedStartTime = alignedStartTime
            self.identifier = identifier
            self.metricList = metricList
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case alignedEndTime = "AlignedEndTime"
            case alignedStartTime = "AlignedStartTime"
            case identifier = "Identifier"
            case metricList = "MetricList"
            case nextToken = "NextToken"
        }
    }

    public struct Insight: AWSDecodableShape {
        ///  Metric names and values from the timeframe  used as baseline to generate the insight.
        public let baselineData: [Data]?
        /// Indicates if the insight is causal or correlated insight.
        public let context: ContextType?
        /// Description of the insight. For example: A high severity Insight found between 02:00 to 02:30, where there was an unusually high DB load 600x above baseline.  Likely performance impact.
        public let description: String?
        /// The end time of the insight. For example, 2018-10-30T00:00:00Z.
        public let endTime: Date?
        /// List of data objects containing metrics and references from the time range while generating the insight.
        public let insightData: [Data]?
        /// The unique identifier for the insight. For example, insight-12345678901234567.
        public let insightId: String
        /// The type of insight. For example, HighDBLoad, HighCPU, or DominatingSQLs.
        public let insightType: String?
        /// List of recommendations for the insight. For example, Investigate the following SQLs that contributed  to 100% of the total DBLoad during that time period: sql-id.
        public let recommendations: [Recommendation]?
        /// The severity of the insight. The values are: Low, Medium, or High.
        public let severity: Severity?
        /// The start time of the insight. For example, 2018-10-30T00:00:00Z.
        public let startTime: Date?
        /// List of supporting insights that provide additional factors for the insight.
        public let supportingInsights: [Insight]?

        public init(baselineData: [Data]? = nil, context: ContextType? = nil, description: String? = nil, endTime: Date? = nil, insightData: [Data]? = nil, insightId: String, insightType: String? = nil, recommendations: [Recommendation]? = nil, severity: Severity? = nil, startTime: Date? = nil, supportingInsights: [Insight]? = nil) {
            self.baselineData = baselineData
            self.context = context
            self.description = description
            self.endTime = endTime
            self.insightData = insightData
            self.insightId = insightId
            self.insightType = insightType
            self.recommendations = recommendations
            self.severity = severity
            self.startTime = startTime
            self.supportingInsights = supportingInsights
        }

        private enum CodingKeys: String, CodingKey {
            case baselineData = "BaselineData"
            case context = "Context"
            case description = "Description"
            case endTime = "EndTime"
            case insightData = "InsightData"
            case insightId = "InsightId"
            case insightType = "InsightType"
            case recommendations = "Recommendations"
            case severity = "Severity"
            case startTime = "StartTime"
            case supportingInsights = "SupportingInsights"
        }
    }

    public struct ListAvailableResourceDimensionsRequest: AWSEncodableShape {
        /// An immutable identifier for a data source that is unique within an Amazon Web Services Region. Performance Insights gathers metrics from this data source. To use an Amazon RDS DB instance as a data source, specify its DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VWZ.
        public let identifier: String
        /// The maximum number of items to return in the response. If more items exist than the specified  MaxRecords value, a pagination token is included in the response so that the remaining  results can be retrieved.
        public let maxResults: Int?
        /// The types of metrics for which to retrieve dimensions. Valid values include db.load.
        public let metrics: [String]
        /// An optional pagination token provided by a previous request. If this parameter is specified,  the response includes only records beyond the token, up to the value specified by MaxRecords.
        public let nextToken: String?
        /// The Amazon Web Services service for which Performance Insights returns metrics.
        public let serviceType: ServiceType

        public init(identifier: String, maxResults: Int? = nil, metrics: [String], nextToken: String? = nil, serviceType: ServiceType) {
            self.identifier = identifier
            self.maxResults = maxResults
            self.metrics = metrics
            self.nextToken = nextToken
            self.serviceType = serviceType
        }

        public func validate(name: String) throws {
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
            try self.validate(self.maxResults, name: "maxResults", parent: name, max: 25)
            try self.validate(self.maxResults, name: "maxResults", parent: name, min: 0)
            try self.metrics.forEach {
                try validate($0, name: "metrics[]", parent: name, max: 256)
                try validate($0, name: "metrics[]", parent: name, pattern: "\\S")
            }
            try self.validate(self.metrics, name: "metrics", parent: name, max: 5)
            try self.validate(self.metrics, name: "metrics", parent: name, min: 1)
            try self.validate(self.nextToken, name: "nextToken", parent: name, max: 8192)
            try self.validate(self.nextToken, name: "nextToken", parent: name, min: 1)
            try self.validate(self.nextToken, name: "nextToken", parent: name, pattern: "^[a-zA-Z0-9_=-]+$")
        }

        private enum CodingKeys: String, CodingKey {
            case identifier = "Identifier"
            case maxResults = "MaxResults"
            case metrics = "Metrics"
            case nextToken = "NextToken"
            case serviceType = "ServiceType"
        }
    }

    public struct ListAvailableResourceDimensionsResponse: AWSDecodableShape {
        /// The dimension information returned for requested metric types.
        public let metricDimensions: [MetricDimensionGroups]?
        /// An optional pagination token provided by a previous request. If this parameter is specified,  the response includes only records beyond the token, up to the value specified by MaxRecords.
        public let nextToken: String?

        public init(metricDimensions: [MetricDimensionGroups]? = nil, nextToken: String? = nil) {
            self.metricDimensions = metricDimensions
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case metricDimensions = "MetricDimensions"
            case nextToken = "NextToken"
        }
    }

    public struct ListAvailableResourceMetricsRequest: AWSEncodableShape {
        /// An immutable identifier for a data source that is unique within an Amazon Web Services Region. Performance Insights gathers metrics from this data source. To use an Amazon RDS DB instance as a data source, specify its DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VWZ.
        public let identifier: String
        /// The maximum number of items to return. If the MaxRecords value is less than the number  of existing items, the response includes a pagination token.
        public let maxResults: Int?
        /// The types of metrics to return in the response. Valid values in the array include the following:    os (OS counter metrics) - All engines    db (DB load metrics) - All engines except for Amazon DocumentDB    db.sql.stats (per-SQL metrics) - All engines except for Amazon DocumentDB    db.sql_tokenized.stats (per-SQL digest metrics) - All engines except for Amazon DocumentDB
        public let metricTypes: [String]
        /// An optional pagination token provided by a previous request. If this parameter is specified,  the response includes only records beyond the token, up to the value specified by MaxRecords.
        public let nextToken: String?
        /// The Amazon Web Services service for which Performance Insights returns metrics.
        public let serviceType: ServiceType

        public init(identifier: String, maxResults: Int? = nil, metricTypes: [String], nextToken: String? = nil, serviceType: ServiceType) {
            self.identifier = identifier
            self.maxResults = maxResults
            self.metricTypes = metricTypes
            self.nextToken = nextToken
            self.serviceType = serviceType
        }

        public func validate(name: String) throws {
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
            try self.validate(self.maxResults, name: "maxResults", parent: name, max: 25)
            try self.validate(self.maxResults, name: "maxResults", parent: name, min: 0)
            try self.metricTypes.forEach {
                try validate($0, name: "metricTypes[]", parent: name, max: 256)
                try validate($0, name: "metricTypes[]", parent: name, pattern: "\\S")
            }
            try self.validate(self.nextToken, name: "nextToken", parent: name, max: 8192)
            try self.validate(self.nextToken, name: "nextToken", parent: name, min: 1)
            try self.validate(self.nextToken, name: "nextToken", parent: name, pattern: "^[a-zA-Z0-9_=-]+$")
        }

        private enum CodingKeys: String, CodingKey {
            case identifier = "Identifier"
            case maxResults = "MaxResults"
            case metricTypes = "MetricTypes"
            case nextToken = "NextToken"
            case serviceType = "ServiceType"
        }
    }

    public struct ListAvailableResourceMetricsResponse: AWSDecodableShape {
        /// An array of metrics available to query. Each array element contains the full name,  description, and unit of the metric.
        public let metrics: [ResponseResourceMetric]?
        /// A pagination token that indicates the response didn’t return all available records because MaxRecords was specified in the previous request. To get the remaining records, specify NextToken in a separate request with this value.
        public let nextToken: String?

        public init(metrics: [ResponseResourceMetric]? = nil, nextToken: String? = nil) {
            self.metrics = metrics
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case metrics = "Metrics"
            case nextToken = "NextToken"
        }
    }

    public struct ListPerformanceAnalysisReportsRequest: AWSEncodableShape {
        /// An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers metrics from this data source. In the console, the identifier is shown as ResourceID. When you call DescribeDBInstances, the identifier is returned as DbiResourceId. To use a DB instance as a data source, specify its DbiResourceId value. For example, specify db-ABCDEFGHIJKLMNOPQRSTU1VW2X.
        public let identifier: String
        /// Specifies whether or not to include the list of tags in the response.
        public let listTags: Bool?
        /// The maximum number of items to return in the response. If more items exist than the specified MaxResults value, a pagination token is included in the response so that the remaining results can be retrieved.
        public let maxResults: Int?
        /// An optional pagination token provided by a previous request.  If this parameter is specified, the response includes only records beyond the token, up to the value specified by MaxResults.
        public let nextToken: String?
        /// The Amazon Web Services service for which Performance Insights returns metrics. Valid value is RDS.
        public let serviceType: ServiceType

        public init(identifier: String, listTags: Bool? = nil, maxResults: Int? = nil, nextToken: String? = nil, serviceType: ServiceType) {
            self.identifier = identifier
            self.listTags = listTags
            self.maxResults = maxResults
            self.nextToken = nextToken
            self.serviceType = serviceType
        }

        public func validate(name: String) throws {
            try self.validate(self.identifier, name: "identifier", parent: name, max: 256)
            try self.validate(self.identifier, name: "identifier", parent: name, pattern: "^[a-zA-Z0-9-]+$")
            try self.validate(self.maxResults, name: "maxResults", parent: name, max: 25)
            try self.validate(self.maxResults, name: "maxResults", parent: name, min: 0)
            try self.validate(self.nextToken, name: "nextToken", parent: name, max: 8192)
            try self.validate(self.nextToken, name: "nextToken", parent: name, min: 1)
            try self.validate(self.nextToken, name: "nextToken", parent: name, pattern: "^[a-zA-Z0-9_=-]+$")
        }

        private enum CodingKeys: String, CodingKey {
            case identifier = "Identifier"
            case listTags = "ListTags"
            case maxResults = "MaxResults"
            case nextToken = "NextToken"
            case serviceType = "ServiceType"
        }
    }

    public struct ListPerformanceAnalysisReportsResponse: AWSDecodableShape {
        /// List of reports including the report identifier, start and end time, creation time, and status.
        public let analysisReports: [AnalysisReportSummary]?
        /// An optional pagination token provided by a previous request.  If this parameter is specified, the response includes only records beyond the token,  up to the value specified by MaxResults.
        public let nextToken: String?

        public init(analysisReports: [AnalysisReportSummary]? = nil, nextToken: String? = nil) {
            self.analysisReports = analysisReports
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case analysisReports = "AnalysisReports"
            case nextToken = "NextToken"
        }
    }

    public struct ListTagsForResourceRequest: AWSEncodableShape {
        /// Lists all the tags for the Amazon RDS Performance Insights resource. This value is an  Amazon Resource Name (ARN). For information about creating an ARN,  see  Constructing an RDS Amazon Resource Name (ARN).
        public let resourceARN: String
        /// List the tags for the Amazon Web Services service for which Performance Insights returns metrics. Valid value is RDS.
        public let serviceType: ServiceType

        public init(resourceARN: String, serviceType: ServiceType) {
            self.resourceARN = resourceARN
            self.serviceType = serviceType
        }

        public func validate(name: String) throws {
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, max: 1011)
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, min: 1)
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, pattern: "^arn:.*:pi:.*$")
        }

        private enum CodingKeys: String, CodingKey {
            case resourceARN = "ResourceARN"
            case serviceType = "ServiceType"
        }
    }

    public struct ListTagsForResourceResponse: AWSDecodableShape {
        /// The metadata assigned to an Amazon RDS resource consisting of a key-value pair.
        public let tags: [Tag]?

        public init(tags: [Tag]? = nil) {
            self.tags = tags
        }

        private enum CodingKeys: String, CodingKey {
            case tags = "Tags"
        }
    }

    public struct MetricDimensionGroups: AWSDecodableShape {
        /// The available dimension groups for a metric type.
        public let groups: [DimensionGroupDetail]?
        /// The metric type to which the dimension information belongs.
        public let metric: String?

        public init(groups: [DimensionGroupDetail]? = nil, metric: String? = nil) {
            self.groups = groups
            self.metric = metric
        }

        private enum CodingKeys: String, CodingKey {
            case groups = "Groups"
            case metric = "Metric"
        }
    }

    public struct MetricKeyDataPoints: AWSDecodableShape {
        /// An array of timestamp-value pairs, representing measurements over a period of time.
        public let dataPoints: [DataPoint]?
        /// The dimensions to which the data points apply.
        public let key: ResponseResourceMetricKey?

        public init(dataPoints: [DataPoint]? = nil, key: ResponseResourceMetricKey? = nil) {
            self.dataPoints = dataPoints
            self.key = key
        }

        private enum CodingKeys: String, CodingKey {
            case dataPoints = "DataPoints"
            case key = "Key"
        }
    }

    public struct MetricQuery: AWSEncodableShape {
        /// One or more filters to apply in the request.  Restrictions:   Any number of filters by the same dimension, as specified in the GroupBy parameter.   A single filter for any other dimension in this dimension group.
        public let filter: [String: String]?
        /// A specification for how to aggregate the data points from a query result. You must specify a valid dimension group.  Performance Insights will return all of the dimensions within that group, unless you provide the names of specific dimensions within that group. You can also request that Performance Insights return a limited number of values for a dimension.
        public let groupBy: DimensionGroup?
        /// The name of a Performance Insights metric to be measured. Valid values for Metric are:    db.load.avg - A scaled representation of the number of active sessions for the  database engine.    db.sampledload.avg - The raw number of active sessions for the database engine.   The counter metrics listed in Performance Insights operating system counters in the Amazon Aurora User Guide.   If the number of active sessions is less than an internal Performance Insights threshold, db.load.avg and db.sampledload.avg are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with db.load.avg showing the scaled values, db.sampledload.avg showing the raw values, and db.sampledload.avg less than db.load.avg. For most use cases, you can query db.load.avg only.
        public let metric: String

        public init(filter: [String: String]? = nil, groupBy: DimensionGroup? = nil, metric: String) {
            self.filter = filter
            self.groupBy = groupBy
            self.metric = metric
        }

        public func validate(name: String) throws {
            try self.filter?.forEach {
                try validate($0.key, name: "filter.key", parent: name, max: 256)
                try validate($0.key, name: "filter.key", parent: name, pattern: "\\S")
                try validate($0.value, name: "filter[\"\($0.key)\"]", parent: name, max: 256)
                try validate($0.value, name: "filter[\"\($0.key)\"]", parent: name, pattern: "\\S")
            }
            try self.groupBy?.validate(name: "\(name).groupBy")
            try self.validate(self.metric, name: "metric", parent: name, max: 256)
            try self.validate(self.metric, name: "metric", parent: name, pattern: "\\S")
        }

        private enum CodingKeys: String, CodingKey {
            case filter = "Filter"
            case groupBy = "GroupBy"
            case metric = "Metric"
        }
    }

    public struct PerformanceInsightsMetric: AWSDecodableShape {
        /// A dimension map that contains the dimensions for this partition.
        public let dimensions: [String: String]?
        /// The Performance Insights metric name.
        public let displayName: String?
        /// The Performance Insights metric.
        public let metric: String?
        /// The value of the metric. For example, 9 for db.load.avg.
        public let value: Double?

        public init(dimensions: [String: String]? = nil, displayName: String? = nil, metric: String? = nil, value: Double? = nil) {
            self.dimensions = dimensions
            self.displayName = displayName
            self.metric = metric
            self.value = value
        }

        private enum CodingKeys: String, CodingKey {
            case dimensions = "Dimensions"
            case displayName = "DisplayName"
            case metric = "Metric"
            case value = "Value"
        }
    }

    public struct Recommendation: AWSDecodableShape {
        /// The recommendation details to help resolve the performance issue. For example,  Investigate the following SQLs that contributed to 100% of the total DBLoad during that time period: sql-id
        public let recommendationDescription: String?
        /// The unique identifier for the recommendation.
        public let recommendationId: String?

        public init(recommendationDescription: String? = nil, recommendationId: String? = nil) {
            self.recommendationDescription = recommendationDescription
            self.recommendationId = recommendationId
        }

        private enum CodingKeys: String, CodingKey {
            case recommendationDescription = "RecommendationDescription"
            case recommendationId = "RecommendationId"
        }
    }

    public struct ResponsePartitionKey: AWSDecodableShape {
        /// A dimension map that contains the dimensions for this partition.
        public let dimensions: [String: String]

        public init(dimensions: [String: String]) {
            self.dimensions = dimensions
        }

        private enum CodingKeys: String, CodingKey {
            case dimensions = "Dimensions"
        }
    }

    public struct ResponseResourceMetric: AWSDecodableShape {
        /// The description of the metric.
        public let description: String?
        /// The full name of the metric.
        public let metric: String?
        /// The unit of the metric.
        public let unit: String?

        public init(description: String? = nil, metric: String? = nil, unit: String? = nil) {
            self.description = description
            self.metric = metric
            self.unit = unit
        }

        private enum CodingKeys: String, CodingKey {
            case description = "Description"
            case metric = "Metric"
            case unit = "Unit"
        }
    }

    public struct ResponseResourceMetricKey: AWSDecodableShape {
        /// The valid dimensions for the metric.
        public let dimensions: [String: String]?
        /// The name of a Performance Insights metric to be measured. Valid values for Metric are:    db.load.avg - A scaled representation of the number of active sessions for the database engine.    db.sampledload.avg - The raw number of active sessions for the database engine.   The counter metrics listed in Performance Insights operating system counters in the Amazon Aurora User Guide.   If the number of active sessions is less than an internal Performance Insights threshold, db.load.avg and  db.sampledload.avg are the same value. If the number of active sessions is greater than the  internal threshold, Performance Insights samples the active sessions, with db.load.avg showing the scaled values,  db.sampledload.avg showing the raw values, and db.sampledload.avg less  than db.load.avg. For most use cases, you can query db.load.avg only.
        public let metric: String

        public init(dimensions: [String: String]? = nil, metric: String) {
            self.dimensions = dimensions
            self.metric = metric
        }

        private enum CodingKeys: String, CodingKey {
            case dimensions = "Dimensions"
            case metric = "Metric"
        }
    }

    public struct Tag: AWSEncodableShape & AWSDecodableShape {
        /// A key is the required name of the tag. The string value can be from 1 to 128 Unicode  characters in length and can't be prefixed with aws: or rds:.  The string can only contain only the set of Unicode letters, digits,  white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$").
        public let key: String
        /// A value is the optional value of the tag. The string value can be from 1 to 256  Unicode characters in length and can't be prefixed with aws: or rds:.  The string can only contain only the set of Unicode letters, digits,  white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$").
        public let value: String

        public init(key: String, value: String) {
            self.key = key
            self.value = value
        }

        public func validate(name: String) throws {
            try self.validate(self.key, name: "key", parent: name, max: 128)
            try self.validate(self.key, name: "key", parent: name, min: 1)
            try self.validate(self.key, name: "key", parent: name, pattern: "^.*$")
            try self.validate(self.value, name: "value", parent: name, max: 256)
            try self.validate(self.value, name: "value", parent: name, pattern: "^.*$")
        }

        private enum CodingKeys: String, CodingKey {
            case key = "Key"
            case value = "Value"
        }
    }

    public struct TagResourceRequest: AWSEncodableShape {
        /// The Amazon RDS Performance Insights resource that the tags are added to. This value is an Amazon Resource Name (ARN). For information about   creating an ARN, see  Constructing an RDS Amazon Resource Name (ARN).
        public let resourceARN: String
        /// The Amazon Web Services service for which Performance Insights returns metrics. Valid value is RDS.
        public let serviceType: ServiceType
        /// The metadata assigned to an Amazon RDS resource consisting of a key-value pair.
        public let tags: [Tag]

        public init(resourceARN: String, serviceType: ServiceType, tags: [Tag]) {
            self.resourceARN = resourceARN
            self.serviceType = serviceType
            self.tags = tags
        }

        public func validate(name: String) throws {
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, max: 1011)
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, min: 1)
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, pattern: "^arn:.*:pi:.*$")
            try self.tags.forEach {
                try $0.validate(name: "\(name).tags[]")
            }
            try self.validate(self.tags, name: "tags", parent: name, max: 200)
        }

        private enum CodingKeys: String, CodingKey {
            case resourceARN = "ResourceARN"
            case serviceType = "ServiceType"
            case tags = "Tags"
        }
    }

    public struct TagResourceResponse: AWSDecodableShape {
        public init() {}
    }

    public struct UntagResourceRequest: AWSEncodableShape {
        /// The Amazon RDS Performance Insights resource that the tags are added to. This value is an Amazon Resource Name (ARN). For information about   creating an ARN, see  Constructing an RDS Amazon Resource Name (ARN).
        public let resourceARN: String
        /// List the tags for the Amazon Web Services service for which Performance Insights returns metrics. Valid value is RDS.
        public let serviceType: ServiceType
        /// The metadata assigned to an Amazon RDS Performance Insights resource consisting of a key-value pair.
        public let tagKeys: [String]

        public init(resourceARN: String, serviceType: ServiceType, tagKeys: [String]) {
            self.resourceARN = resourceARN
            self.serviceType = serviceType
            self.tagKeys = tagKeys
        }

        public func validate(name: String) throws {
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, max: 1011)
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, min: 1)
            try self.validate(self.resourceARN, name: "resourceARN", parent: name, pattern: "^arn:.*:pi:.*$")
            try self.tagKeys.forEach {
                try validate($0, name: "tagKeys[]", parent: name, max: 128)
                try validate($0, name: "tagKeys[]", parent: name, min: 1)
                try validate($0, name: "tagKeys[]", parent: name, pattern: "^.*$")
            }
            try self.validate(self.tagKeys, name: "tagKeys", parent: name, max: 200)
        }

        private enum CodingKeys: String, CodingKey {
            case resourceARN = "ResourceARN"
            case serviceType = "ServiceType"
            case tagKeys = "TagKeys"
        }
    }

    public struct UntagResourceResponse: AWSDecodableShape {
        public init() {}
    }
}

// MARK: - Errors

/// Error enum for PI
public struct PIErrorType: AWSErrorType {
    enum Code: String {
        case internalServiceError = "InternalServiceError"
        case invalidArgumentException = "InvalidArgumentException"
        case notAuthorizedException = "NotAuthorizedException"
    }

    private let error: Code
    public let context: AWSErrorContext?

    /// initialize PI
    public init?(errorCode: String, context: AWSErrorContext) {
        guard let error = Code(rawValue: errorCode) else { return nil }
        self.error = error
        self.context = context
    }

    internal init(_ error: Code) {
        self.error = error
        self.context = nil
    }

    /// return error code string
    public var errorCode: String { self.error.rawValue }

    /// The request failed due to an unknown error.
    public static var internalServiceError: Self { .init(.internalServiceError) }
    /// One of the arguments provided is invalid for this request.
    public static var invalidArgumentException: Self { .init(.invalidArgumentException) }
    /// The user is not authorized to perform this request.
    public static var notAuthorizedException: Self { .init(.notAuthorizedException) }
}

extension PIErrorType: Equatable {
    public static func == (lhs: PIErrorType, rhs: PIErrorType) -> Bool {
        lhs.error == rhs.error
    }
}

extension PIErrorType: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(self.message ?? "")"
    }
}
