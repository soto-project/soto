//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2021 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto-codegenerator.
// DO NOT EDIT.

import SotoCore

/// Error enum for AppRunner
public struct AppRunnerErrorType: AWSErrorType {
    enum Code: String {
        case internalServiceErrorException = "InternalServiceErrorException"
        case invalidRequestException = "InvalidRequestException"
        case invalidStateException = "InvalidStateException"
        case resourceNotFoundException = "ResourceNotFoundException"
        case serviceQuotaExceededException = "ServiceQuotaExceededException"
    }

    private let error: Code
    public let context: AWSErrorContext?

    /// initialize AppRunner
    public init?(errorCode: String, context: AWSErrorContext) {
        guard let error = Code(rawValue: errorCode) else { return nil }
        self.error = error
        self.context = context
    }

    internal init(_ error: Code) {
        self.error = error
        self.context = nil
    }

    /// return error code string
    public var errorCode: String { self.error.rawValue }

    /// An unexpected service exception occurred.
    public static var internalServiceErrorException: Self { .init(.internalServiceErrorException) }
    /// One or more input parameters aren't valid. Refer to the API action's document page, correct the input parameters, and try the action again.
    public static var invalidRequestException: Self { .init(.invalidRequestException) }
    /// You can't perform this action when the resource is in its current state.
    public static var invalidStateException: Self { .init(.invalidStateException) }
    /// A resource doesn't exist for the specified Amazon Resource Name (ARN) in your AWS account.
    public static var resourceNotFoundException: Self { .init(.resourceNotFoundException) }
    /// App Runner can't create this resource. You've reached your account quota for this resource type. For App Runner per-resource quotas, see AWS App Runner endpoints and quotas in the AWS General Reference.
    public static var serviceQuotaExceededException: Self { .init(.serviceQuotaExceededException) }
}

extension AppRunnerErrorType: Equatable {
    public static func == (lhs: AppRunnerErrorType, rhs: AppRunnerErrorType) -> Bool {
        lhs.error == rhs.error
    }
}

extension AppRunnerErrorType: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(self.message ?? "")"
    }
}
