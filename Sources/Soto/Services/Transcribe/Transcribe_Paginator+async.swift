//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2021 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto-codegenerator.
// DO NOT EDIT.

#if compiler(>=5.5.2) && canImport(_Concurrency)

import SotoCore

// MARK: Paginators

@available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
extension Transcribe {
    ///  Provides a list of Call Analytics categories, including all rules that make up each category. To get detailed information about a specific Call Analytics category, use the  operation.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listCallAnalyticsCategoriesPaginator(
        _ input: ListCallAnalyticsCategoriesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListCallAnalyticsCategoriesRequest, ListCallAnalyticsCategoriesResponse> {
        return .init(
            input: input,
            command: listCallAnalyticsCategories,
            inputKey: \ListCallAnalyticsCategoriesRequest.nextToken,
            outputKey: \ListCallAnalyticsCategoriesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Provides a list of Call Analytics jobs that match the specified criteria. If no criteria are  specified, all Call Analytics jobs are returned.  To get detailed information about a specific Call Analytics job, use the  operation.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listCallAnalyticsJobsPaginator(
        _ input: ListCallAnalyticsJobsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListCallAnalyticsJobsRequest, ListCallAnalyticsJobsResponse> {
        return .init(
            input: input,
            command: listCallAnalyticsJobs,
            inputKey: \ListCallAnalyticsJobsRequest.nextToken,
            outputKey: \ListCallAnalyticsJobsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Provides a list of custom language models that match the specified criteria. If no criteria are specified, all language models are returned. To get detailed information about a specific custom language model, use the  operation.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listLanguageModelsPaginator(
        _ input: ListLanguageModelsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListLanguageModelsRequest, ListLanguageModelsResponse> {
        return .init(
            input: input,
            command: listLanguageModels,
            inputKey: \ListLanguageModelsRequest.nextToken,
            outputKey: \ListLanguageModelsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Provides a list of medical transcription jobs that match the specified criteria. If no criteria are  specified, all medical transcription jobs are returned.   To get detailed information about a specific medical transcription job, use the  operation.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listMedicalTranscriptionJobsPaginator(
        _ input: ListMedicalTranscriptionJobsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListMedicalTranscriptionJobsRequest, ListMedicalTranscriptionJobsResponse> {
        return .init(
            input: input,
            command: listMedicalTranscriptionJobs,
            inputKey: \ListMedicalTranscriptionJobsRequest.nextToken,
            outputKey: \ListMedicalTranscriptionJobsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Provides a list of custom medical vocabularies that match the specified criteria. If no  criteria are specified, all custom medical vocabularies are returned.  To get detailed information about a specific custom medical vocabulary, use the  operation.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listMedicalVocabulariesPaginator(
        _ input: ListMedicalVocabulariesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListMedicalVocabulariesRequest, ListMedicalVocabulariesResponse> {
        return .init(
            input: input,
            command: listMedicalVocabularies,
            inputKey: \ListMedicalVocabulariesRequest.nextToken,
            outputKey: \ListMedicalVocabulariesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Provides a list of transcription jobs that match the specified criteria. If no criteria are  specified, all transcription jobs are returned.       To get detailed information about a specific transcription job, use the  operation.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listTranscriptionJobsPaginator(
        _ input: ListTranscriptionJobsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListTranscriptionJobsRequest, ListTranscriptionJobsResponse> {
        return .init(
            input: input,
            command: listTranscriptionJobs,
            inputKey: \ListTranscriptionJobsRequest.nextToken,
            outputKey: \ListTranscriptionJobsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Provides a list of custom vocabularies that match the specified criteria. If no criteria are specified, all custom vocabularies are returned.     To get detailed information about a specific custom vocabulary, use the  operation.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listVocabulariesPaginator(
        _ input: ListVocabulariesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListVocabulariesRequest, ListVocabulariesResponse> {
        return .init(
            input: input,
            command: listVocabularies,
            inputKey: \ListVocabulariesRequest.nextToken,
            outputKey: \ListVocabulariesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Provides a list of custom vocabulary filters that match the specified criteria. If no criteria are specified, all custom vocabularies are returned.      To get detailed information about a specific custom vocabulary filter, use the  operation.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listVocabularyFiltersPaginator(
        _ input: ListVocabularyFiltersRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListVocabularyFiltersRequest, ListVocabularyFiltersResponse> {
        return .init(
            input: input,
            command: listVocabularyFilters,
            inputKey: \ListVocabularyFiltersRequest.nextToken,
            outputKey: \ListVocabularyFiltersResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }
}

#endif // compiler(>=5.5.2) && canImport(_Concurrency)
