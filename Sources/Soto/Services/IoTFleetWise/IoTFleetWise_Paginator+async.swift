//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2022 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto-codegenerator.
// DO NOT EDIT.

#if compiler(>=5.5.2) && canImport(_Concurrency)

import SotoCore

// MARK: Paginators

@available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
extension IoTFleetWise {
    ///   Retrieves information about the status of a vehicle with any associated campaigns.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func getVehicleStatusPaginator(
        _ input: GetVehicleStatusRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<GetVehicleStatusRequest, GetVehicleStatusResponse> {
        return .init(
            input: input,
            command: getVehicleStatus,
            inputKey: \GetVehicleStatusRequest.nextToken,
            outputKey: \GetVehicleStatusResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Lists information about created campaigns.   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listCampaignsPaginator(
        _ input: ListCampaignsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListCampaignsRequest, ListCampaignsResponse> {
        return .init(
            input: input,
            command: listCampaigns,
            inputKey: \ListCampaignsRequest.nextToken,
            outputKey: \ListCampaignsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Lists the network interfaces specified in a decoder manifest.   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listDecoderManifestNetworkInterfacesPaginator(
        _ input: ListDecoderManifestNetworkInterfacesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListDecoderManifestNetworkInterfacesRequest, ListDecoderManifestNetworkInterfacesResponse> {
        return .init(
            input: input,
            command: listDecoderManifestNetworkInterfaces,
            inputKey: \ListDecoderManifestNetworkInterfacesRequest.nextToken,
            outputKey: \ListDecoderManifestNetworkInterfacesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   A list of information about signal decoders specified in a decoder manifest.   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listDecoderManifestSignalsPaginator(
        _ input: ListDecoderManifestSignalsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListDecoderManifestSignalsRequest, ListDecoderManifestSignalsResponse> {
        return .init(
            input: input,
            command: listDecoderManifestSignals,
            inputKey: \ListDecoderManifestSignalsRequest.nextToken,
            outputKey: \ListDecoderManifestSignalsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Lists decoder manifests.   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listDecoderManifestsPaginator(
        _ input: ListDecoderManifestsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListDecoderManifestsRequest, ListDecoderManifestsResponse> {
        return .init(
            input: input,
            command: listDecoderManifests,
            inputKey: \ListDecoderManifestsRequest.nextToken,
            outputKey: \ListDecoderManifestsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Retrieves information for each created fleet in an Amazon Web Services account.   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listFleetsPaginator(
        _ input: ListFleetsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListFleetsRequest, ListFleetsResponse> {
        return .init(
            input: input,
            command: listFleets,
            inputKey: \ListFleetsRequest.nextToken,
            outputKey: \ListFleetsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  Retrieves a list of IDs for all fleets that the vehicle is associated with.  This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listFleetsForVehiclePaginator(
        _ input: ListFleetsForVehicleRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListFleetsForVehicleRequest, ListFleetsForVehicleResponse> {
        return .init(
            input: input,
            command: listFleetsForVehicle,
            inputKey: \ListFleetsForVehicleRequest.nextToken,
            outputKey: \ListFleetsForVehicleResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Lists information about nodes specified in a vehicle model (model manifest).   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listModelManifestNodesPaginator(
        _ input: ListModelManifestNodesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListModelManifestNodesRequest, ListModelManifestNodesResponse> {
        return .init(
            input: input,
            command: listModelManifestNodes,
            inputKey: \ListModelManifestNodesRequest.nextToken,
            outputKey: \ListModelManifestNodesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Retrieves a list of vehicle models (model manifests).   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listModelManifestsPaginator(
        _ input: ListModelManifestsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListModelManifestsRequest, ListModelManifestsResponse> {
        return .init(
            input: input,
            command: listModelManifests,
            inputKey: \ListModelManifestsRequest.nextToken,
            outputKey: \ListModelManifestsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Lists of information about the signals (nodes) specified in a signal catalog.   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listSignalCatalogNodesPaginator(
        _ input: ListSignalCatalogNodesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListSignalCatalogNodesRequest, ListSignalCatalogNodesResponse> {
        return .init(
            input: input,
            command: listSignalCatalogNodes,
            inputKey: \ListSignalCatalogNodesRequest.nextToken,
            outputKey: \ListSignalCatalogNodesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Lists all the created signal catalogs in an Amazon Web Services account.  You can use  to list information about each signal (node) specified in a signal catalog.  This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listSignalCatalogsPaginator(
        _ input: ListSignalCatalogsRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListSignalCatalogsRequest, ListSignalCatalogsResponse> {
        return .init(
            input: input,
            command: listSignalCatalogs,
            inputKey: \ListSignalCatalogsRequest.nextToken,
            outputKey: \ListSignalCatalogsResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Retrieves a list of summaries of created vehicles.   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listVehiclesPaginator(
        _ input: ListVehiclesRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListVehiclesRequest, ListVehiclesResponse> {
        return .init(
            input: input,
            command: listVehicles,
            inputKey: \ListVehiclesRequest.nextToken,
            outputKey: \ListVehiclesResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///   Retrieves a list of summaries of all vehicles associated with a fleet.   This API operation uses pagination. Specify the nextToken parameter in the request to return more results.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listVehiclesInFleetPaginator(
        _ input: ListVehiclesInFleetRequest,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListVehiclesInFleetRequest, ListVehiclesInFleetResponse> {
        return .init(
            input: input,
            command: listVehiclesInFleet,
            inputKey: \ListVehiclesInFleetRequest.nextToken,
            outputKey: \ListVehiclesInFleetResponse.nextToken,
            logger: logger,
            on: eventLoop
        )
    }
}

#endif // compiler(>=5.5.2) && canImport(_Concurrency)
