//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2021 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto-codegenerator.
// DO NOT EDIT.

#if compiler(>=5.5.2) && canImport(_Concurrency)

import SotoCore

// MARK: Paginators

@available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
extension Proton {
    ///  View a list of environment account connections. For more information, see Environment account connections in the Proton Administrator guide.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listEnvironmentAccountConnectionsPaginator(
        _ input: ListEnvironmentAccountConnectionsInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListEnvironmentAccountConnectionsInput, ListEnvironmentAccountConnectionsOutput> {
        return .init(
            input: input,
            command: listEnvironmentAccountConnections,
            inputKey: \ListEnvironmentAccountConnectionsInput.nextToken,
            outputKey: \ListEnvironmentAccountConnectionsOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List the infrastructure as code outputs for your environment.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listEnvironmentOutputsPaginator(
        _ input: ListEnvironmentOutputsInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListEnvironmentOutputsInput, ListEnvironmentOutputsOutput> {
        return .init(
            input: input,
            command: listEnvironmentOutputs,
            inputKey: \ListEnvironmentOutputsInput.nextToken,
            outputKey: \ListEnvironmentOutputsOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List the provisioned resources for your environment.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listEnvironmentProvisionedResourcesPaginator(
        _ input: ListEnvironmentProvisionedResourcesInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListEnvironmentProvisionedResourcesInput, ListEnvironmentProvisionedResourcesOutput> {
        return .init(
            input: input,
            command: listEnvironmentProvisionedResources,
            inputKey: \ListEnvironmentProvisionedResourcesInput.nextToken,
            outputKey: \ListEnvironmentProvisionedResourcesOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List major or minor versions of an environment template with detail data.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listEnvironmentTemplateVersionsPaginator(
        _ input: ListEnvironmentTemplateVersionsInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListEnvironmentTemplateVersionsInput, ListEnvironmentTemplateVersionsOutput> {
        return .init(
            input: input,
            command: listEnvironmentTemplateVersions,
            inputKey: \ListEnvironmentTemplateVersionsInput.nextToken,
            outputKey: \ListEnvironmentTemplateVersionsOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List environment templates.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listEnvironmentTemplatesPaginator(
        _ input: ListEnvironmentTemplatesInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListEnvironmentTemplatesInput, ListEnvironmentTemplatesOutput> {
        return .init(
            input: input,
            command: listEnvironmentTemplates,
            inputKey: \ListEnvironmentTemplatesInput.nextToken,
            outputKey: \ListEnvironmentTemplatesOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List environments with detail data summaries.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listEnvironmentsPaginator(
        _ input: ListEnvironmentsInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListEnvironmentsInput, ListEnvironmentsOutput> {
        return .init(
            input: input,
            command: listEnvironments,
            inputKey: \ListEnvironmentsInput.nextToken,
            outputKey: \ListEnvironmentsOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List repositories with detail data.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listRepositoriesPaginator(
        _ input: ListRepositoriesInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListRepositoriesInput, ListRepositoriesOutput> {
        return .init(
            input: input,
            command: listRepositories,
            inputKey: \ListRepositoriesInput.nextToken,
            outputKey: \ListRepositoriesOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List repository sync definitions with detail data.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listRepositorySyncDefinitionsPaginator(
        _ input: ListRepositorySyncDefinitionsInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListRepositorySyncDefinitionsInput, ListRepositorySyncDefinitionsOutput> {
        return .init(
            input: input,
            command: listRepositorySyncDefinitions,
            inputKey: \ListRepositorySyncDefinitionsInput.nextToken,
            outputKey: \ListRepositorySyncDefinitionsOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  View a list service instance infrastructure as code outputs with detail data.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listServiceInstanceOutputsPaginator(
        _ input: ListServiceInstanceOutputsInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListServiceInstanceOutputsInput, ListServiceInstanceOutputsOutput> {
        return .init(
            input: input,
            command: listServiceInstanceOutputs,
            inputKey: \ListServiceInstanceOutputsInput.nextToken,
            outputKey: \ListServiceInstanceOutputsOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List provisioned resources for a service instance with details.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listServiceInstanceProvisionedResourcesPaginator(
        _ input: ListServiceInstanceProvisionedResourcesInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListServiceInstanceProvisionedResourcesInput, ListServiceInstanceProvisionedResourcesOutput> {
        return .init(
            input: input,
            command: listServiceInstanceProvisionedResources,
            inputKey: \ListServiceInstanceProvisionedResourcesInput.nextToken,
            outputKey: \ListServiceInstanceProvisionedResourcesOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List service instances with summaries of detail data.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listServiceInstancesPaginator(
        _ input: ListServiceInstancesInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListServiceInstancesInput, ListServiceInstancesOutput> {
        return .init(
            input: input,
            command: listServiceInstances,
            inputKey: \ListServiceInstancesInput.nextToken,
            outputKey: \ListServiceInstancesOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  View a list service pipeline infrastructure as code outputs with detail.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listServicePipelineOutputsPaginator(
        _ input: ListServicePipelineOutputsInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListServicePipelineOutputsInput, ListServicePipelineOutputsOutput> {
        return .init(
            input: input,
            command: listServicePipelineOutputs,
            inputKey: \ListServicePipelineOutputsInput.nextToken,
            outputKey: \ListServicePipelineOutputsOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List provisioned resources for a service and pipeline with details.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listServicePipelineProvisionedResourcesPaginator(
        _ input: ListServicePipelineProvisionedResourcesInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListServicePipelineProvisionedResourcesInput, ListServicePipelineProvisionedResourcesOutput> {
        return .init(
            input: input,
            command: listServicePipelineProvisionedResources,
            inputKey: \ListServicePipelineProvisionedResourcesInput.nextToken,
            outputKey: \ListServicePipelineProvisionedResourcesOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List major or minor versions of a service template with detail data.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listServiceTemplateVersionsPaginator(
        _ input: ListServiceTemplateVersionsInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListServiceTemplateVersionsInput, ListServiceTemplateVersionsOutput> {
        return .init(
            input: input,
            command: listServiceTemplateVersions,
            inputKey: \ListServiceTemplateVersionsInput.nextToken,
            outputKey: \ListServiceTemplateVersionsOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List service templates with detail data.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listServiceTemplatesPaginator(
        _ input: ListServiceTemplatesInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListServiceTemplatesInput, ListServiceTemplatesOutput> {
        return .init(
            input: input,
            command: listServiceTemplates,
            inputKey: \ListServiceTemplatesInput.nextToken,
            outputKey: \ListServiceTemplatesOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List services with summaries of detail data.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listServicesPaginator(
        _ input: ListServicesInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListServicesInput, ListServicesOutput> {
        return .init(
            input: input,
            command: listServices,
            inputKey: \ListServicesInput.nextToken,
            outputKey: \ListServicesOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }

    ///  List tags for a resource. For more information, see Proton resources and tagging in the Proton Administrator Guide or Proton User Guide.
    /// Return PaginatorSequence for operation.
    ///
    /// - Parameters:
    ///   - input: Input for request
    ///   - logger: Logger used flot logging
    ///   - eventLoop: EventLoop to run this process on
    public func listTagsForResourcePaginator(
        _ input: ListTagsForResourceInput,
        logger: Logger = AWSClient.loggingDisabled,
        on eventLoop: EventLoop? = nil
    ) -> AWSClient.PaginatorSequence<ListTagsForResourceInput, ListTagsForResourceOutput> {
        return .init(
            input: input,
            command: listTagsForResource,
            inputKey: \ListTagsForResourceInput.nextToken,
            outputKey: \ListTagsForResourceOutput.nextToken,
            logger: logger,
            on: eventLoop
        )
    }
}

#endif // compiler(>=5.5.2) && canImport(_Concurrency)
