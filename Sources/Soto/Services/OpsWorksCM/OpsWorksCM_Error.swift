//===----------------------------------------------------------------------===//
//
// This source file is part of the Soto for AWS open source project
//
// Copyright (c) 2017-2021 the Soto project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of Soto project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/soto-project/soto-codegenerator.
// DO NOT EDIT.

import SotoCore

/// Error enum for OpsWorksCM
public struct OpsWorksCMErrorType: AWSErrorType {
    enum Code: String {
        case invalidNextTokenException = "InvalidNextTokenException"
        case invalidStateException = "InvalidStateException"
        case limitExceededException = "LimitExceededException"
        case resourceAlreadyExistsException = "ResourceAlreadyExistsException"
        case resourceNotFoundException = "ResourceNotFoundException"
        case validationException = "ValidationException"
    }

    private let error: Code
    public let context: AWSErrorContext?

    /// initialize OpsWorksCM
    public init?(errorCode: String, context: AWSErrorContext) {
        guard let error = Code(rawValue: errorCode) else { return nil }
        self.error = error
        self.context = context
    }

    internal init(_ error: Code) {
        self.error = error
        self.context = nil
    }

    /// return error code string
    public var errorCode: String { self.error.rawValue }

    /// This occurs when the provided nextToken is not valid.
    public static var invalidNextTokenException: Self { .init(.invalidNextTokenException) }
    /// The resource is in a state that does not allow you to perform a specified action.
    public static var invalidStateException: Self { .init(.invalidStateException) }
    /// The limit of servers or backups has been reached.
    public static var limitExceededException: Self { .init(.limitExceededException) }
    /// The requested resource cannot be created because it already exists.
    public static var resourceAlreadyExistsException: Self { .init(.resourceAlreadyExistsException) }
    /// The requested resource does not exist, or access was denied.
    public static var resourceNotFoundException: Self { .init(.resourceNotFoundException) }
    /// One or more of the provided request parameters are not valid.
    public static var validationException: Self { .init(.validationException) }
}

extension OpsWorksCMErrorType: Equatable {
    public static func == (lhs: OpsWorksCMErrorType, rhs: OpsWorksCMErrorType) -> Bool {
        lhs.error == rhs.error
    }
}

extension OpsWorksCMErrorType: CustomStringConvertible {
    public var description: String {
        return "\(self.error.rawValue): \(self.message ?? "")"
    }
}
